{
  "root": true,
  "ignorePatterns": [
    "**/*"
  ],
  "plugins": [
    "@nrwl/nx",
    "prettier",
    "deprecation",
    "eslint-plugin-prefer-arrow",
    "eslint-plugin-import",
    "eslint-plugin-jsdoc"
  ],
  "overrides": [
    {
      "files": [
        "*.ts",
        "*.tsx",
        "*.js",
        "*.jsx"
      ],
      "parserOptions": {
        "ecmaVersion": 2020,
        "sourceType": "module",
        "project": [
          "./tsconfig.*?.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/recommended",
        "eslint:recommended",
        "plugin:prettier/recommended",
        "plugin:jsdoc/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "deprecation/deprecation": "warn",
        "prefer-arrow/prefer-arrow-functions": [
          "error",
          {
            "disallowPrototype": true,
            "singleReturnOnly": true,
            "classPropertiesAllowed": false,
            "allowStandaloneDeclarations": true
          }
        ],
        "complexity": [
          "error",
          {
            "max": 7
          }
        ],
        "jsdoc/check-alignment": "error",
        "jsdoc/no-types": "error",
        "jsdoc/require-returns": "warn",
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": [
                  "*"
                ]
              }
            ]
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": [
              "element",
              "attribute"
            ],
            "prefix": "rime",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": [
              "element",
              "attribute"
            ],
            "prefix": "rime",
            "style": "kebab-case"
          }
        ],
        "@typescript-eslint/no-inferrable-types": 0,
        "@typescript-eslint/no-non-null-assertion": 0,
        "no-underscore-dangle": "off",
        "@angular-eslint/no-input-rename": "off",
        "no-duplicate-imports": "error",
        "import/no-duplicates": "error",
        "import/no-unused-modules": "error",
        "import/order": [
          "warn",
          {
            "alphabetize": {
              "order": "asc",
              "caseInsensitive": false
            },
            "newlines-between": "always",
            "groups": [
              "external",
              "builtin",
              "internal",
              [
                "parent",
                "sibling",
                "index"
              ]
            ],
            "pathGroups": [
              {
                "pattern": "{@angular/**,rxjs,rxjs/operators}",
                "group": "external",
                "position": "before"
              }
            ]
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "classProperty",
            "modifiers": [
              "private"
            ],
            "format": [
              "camelCase"
            ],
            "leadingUnderscore": "allowSingleOrDouble"
          }
        ],
        "@typescript-eslint/no-unused-expressions": [
          "error",
          {
            "allowTernary": true,
            "allowShortCircuit": true
          }
        ],
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": "error",
        "@typescript-eslint/no-explicit-any": [
          "warn",
          {
            "ignoreRestArgs": true
          }
        ],
        "@typescript-eslint/no-unsafe-call": "warn",
        "@typescript-eslint/no-unsafe-assignment": "warn",
        "@typescript-eslint/unbound-method": "off",
        "@typescript-eslint/no-unsafe-member-access": "warn",
        "no-unsafe-optional-chaining": "warn",
        "@typescript-eslint/no-unsafe-argument": "warn",
        "@typescript-eslint/no-unsafe-return": "warn",
        "@typescript-eslint/no-floating-promises": "warn",
        "@typescript-eslint/no-empty-function": "off"
      }
    },
    {
      "files": [
        "*.ts",
        "*.tsx"
      ],
      "extends": [
        "plugin:@nrwl/nx/typescript"
      ],
      "rules": {}
    },
    {
      "files": [
        "*.js",
        "*.jsx"
      ],
      "extends": [
        "plugin:@nrwl/nx/javascript"
      ],
      "rules": {}
    },
    {
      "files": [
        "*.spec.ts",
        "*.spec.tsx",
        "*.spec.js",
        "*.spec.jsx"
      ],
      "env": {
        "jest": true
      },
      "rules": {}
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {}
    },
    {
      "files": [
        "*.html"
      ],
      "excludedFiles": [
        "*inline-template-*.component.html"
      ],
      "extends": [
        "plugin:prettier/recommended"
      ],
      "rules": {
        "prettier/prettier": [
          "error",
          {
            "parser": "angular"
          }
        ]
      }
    }
  ]
}
